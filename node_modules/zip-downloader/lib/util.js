"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var getExtension = exports.getExtension = function getExtension(name) {
  return name.substr(name.lastIndexOf("."));
};

var getNameFromUrl = exports.getNameFromUrl = function getNameFromUrl(src) {
  return src.substr(1 + src.lastIndexOf("/")).split('?')[0].split('#')[0];
};

var getExtensionFromUrl = exports.getExtensionFromUrl = function getExtensionFromUrl(src) {
  return getExtension(getNameFromUrl(src));
};

var getAssetFileName = exports.getAssetFileName = function getAssetFileName(assetName, assetSrc) {
  var name = assetName ? assetName.trim() : getNameFromUrl(assetSrc);
  var extension = getExtensionFromUrl(assetSrc);
  if (extension !== getExtension(name)) {
    name = "" + name + extension;
  }
  return name.replace(/\//g, ' ');
};

var getIndexedFileName = exports.getIndexedFileName = function getIndexedFileName(downloadFileName, index) {
  if (index > 0) {
    downloadFileName = downloadFileName + "_" + index;
  }
  return downloadFileName;
};

var numeriseFileName = exports.numeriseFileName = function numeriseFileName(fileName, num) {
  var extension = getExtension(fileName),
      fileNameMinusExtension = fileName.replace(/\.[^/.]+$/, "");

  return fileNameMinusExtension + "_" + num + extension;
};

var queue = exports.queue = function queue(func, waitTime) {
  var funcQueue = [];
  var isWaiting;

  var executeFunc = function executeFunc(params) {
    isWaiting = true;
    func(params);
    setTimeout(play, waitTime);
  };

  var play = function play() {
    isWaiting = false;
    if (funcQueue.length) {
      var params = funcQueue.shift();
      executeFunc(params);
    }
  };

  return function (params) {
    if (isWaiting) {
      funcQueue.push(params);
    } else {
      executeFunc(params);
    }
  };
};